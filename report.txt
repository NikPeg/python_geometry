Отчёт Пеганова Никиты по домашнему заданию №3.
31.10.2021

Задание:
    Обобщенный артефакт, используемый в задании:
        Плоская геометрическая фигура, размещаемые в координатной сетке.

    Базовые альтернативы:
        1. Круг (целочисленные координата центра окружности, радиус)
        2. Прямоугольник (целочисленные координаты левого верхнего и правого нижнего углов)
        3. Треугольник (целочисленные координаты трех углов)

    Общие для всех альтернатив переменные:
        Цвет фигуры (перечислимый тип) = {красный, оранжевый, желтый, зеленый, голубой, синий, фиолетовый}

    Общие для всех альтернатив функции:
        Вычисление периметра фигуры (действительное число)

    Обработка данных:
        Упорядочить элементы контейнера по убыванию используя сортировку Сортировка с помощью прямого выбора (Straight Selection).
        В качестве ключей для сортировки и других действий используются результаты функции, общей для всех альтернатив.

Запуск программы:
    python3 main.py имя_входного_файла имя_выходного_файла

Формат тестов:
    В первой строке — число тестовых фигур.
    В последующих строках описание фигур по одной фигуре в строке.
    Первое слово — имя фигуры, последующие данные через пробел — данные фигуры.

Зависимости между файлами проекта:
Color
  |
  v
Figure Point
  | _____|
  | |
  v v
 Circle
Triangle
Rectangle
   |
   v
Container
   |
   v
main.cpp
Также присутствует файл settings.py, подключенный ко всем файлам проекта.

Число заголовочных файлов: 8

Общий размер исходных текстов: 4206 байт
Общее число строк: 182

Время работы программы (измерено с помощью time.time()):
1 тест: 0.2923011779785156 мс
2 тест: 0.5249977111816406 мс
3 тест: 385.0865364074707 мс
4 тест: 14206.765174865723 мс
5 тест: 42922.59216308594 мс

Сравнение с предыдущим заданием:
Программа получилась меньше по занимаемой памяти, с меньшим числом строк кода и быстрее по времени на всех тестах.
Однако, из-за динамической типизации переменные занимают больше памяти, чем в c++ (проверено с помощью sys.getsizeof).
